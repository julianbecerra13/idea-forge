version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: idea_forge_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: idea_forge
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d idea_forge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - idea_forge_network

  # Backend API (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: idea_forge_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://app:app@db:5432/idea_forge?sslmode=disable
      - GENKIT_BASE_URL=http://genkit:3001
      - GENKIT_TOKEN=dev-secret-token
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-min-32-chars
      - FRONTEND_URL=http://localhost:3000
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - SMTP_FROM=${SMTP_FROM:-Idea Forge <noreply@ideaforge.com>}
    depends_on:
      db:
        condition: service_healthy
      genkit:
        condition: service_started
    networks:
      - idea_forge_network

  # Genkit AI Service (Node.js)
  genkit:
    build:
      context: ./genkit
      dockerfile: Dockerfile
    container_name: idea_forge_genkit
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - GENKIT_TOKEN=dev-secret-token
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    networks:
      - idea_forge_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./web/idea-forge-web
      dockerfile: Dockerfile
    container_name: idea_forge_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8080
    depends_on:
      - backend
    networks:
      - idea_forge_network

volumes:
  pgdata:

networks:
  idea_forge_network:
    driver: bridge
